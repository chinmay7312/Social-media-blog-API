package DAO;

import java.sql.Statement;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import Model.Account;
import Util.ConnectionUtil;

/* 
 * DAO class mediates the tranformation of data between the format of objects in Java to rows
 * in a database. 
 */

public class AccountDAO {
    
    /*
     * Function: register account in the database
     * The account_id  should be automatically generated by the sql database if it is not provided because it was
     * set to auto_increment.
     * Only need to insert username and password for the account; check username is not blank and
     * doesn't already exist, check password is at least 4 characters long
     */
    public Account addAccount(Account account) {
        Connection connection = ConnectionUtil.getConnection();

        try {
            String sql = "insert into account (username,password) values (?,?)";
            PreparedStatement preparedStatement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);

            preparedStatement.setString(1, account.getUsername());
            preparedStatement.setString(2, account.getPassword());

            preparedStatement.executeUpdate();
            ResultSet pKeyResultSet = preparedStatement.getGeneratedKeys();
            if (pKeyResultSet.next()) {
                int generated_account_id = (int) pKeyResultSet.getLong(1);
                return new Account(generated_account_id, account.getUsername(), account.getPassword());
            }
        } catch(SQLException e) {
            System.out.print(e.getMessage());
        }

        return null;
    }

    /*
     * Function: login to account by cheching database for credentials
     * Check if username and password are valid in the database and then return the account
     * including the account_id if mathc is found
     * Return null otherwise
     */
    public Account loginToAccount(Account account) {
        Connection connection = ConnectionUtil.getConnection();

        try {
            String sql = "select * from account where username = ? and password = ?";
            PreparedStatement preparedStatement = connection.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);

            preparedStatement.setString(1, account.getUsername());
            preparedStatement.setString(2, account.getPassword());

            ResultSet rs = preparedStatement.executeQuery();
            while(rs.next()) {
                int account_id = rs.getInt("account_id");
                String username = rs.getString("username");
                String password = rs.getString("password");
                Account accountLogin = new Account(account_id, username, password);
                return accountLogin;
            }
        } catch (SQLException e) {
            // TODO: handle exception
            System.out.println(e.getMessage());
        }

        return null;
    }
}
